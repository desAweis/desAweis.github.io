<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Wei's Blog</title>
    <description></description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Sat, 13 Apr 2019 01:41:51 +0200</pubDate>
    <lastBuildDate>Sat, 13 Apr 2019 01:41:51 +0200</lastBuildDate>
    <generator>Jekyll v3.7.4</generator>
    
      <item>
        <title>Haskell Note</title>
        <description>&lt;p&gt;Thinking is cheap, coding is hard.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;currying&quot;&gt;Currying&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;In type declarations &lt;code class=&quot;highlighter-rouge&quot;&gt;-&amp;gt;&lt;/code&gt; always associates with right side. This means that cosider the right part as one entirety, e.g. &lt;code class=&quot;highlighter-rouge&quot;&gt;plus :: Int -&amp;gt; Int -&amp;gt; Int&lt;/code&gt;  stands for &lt;code class=&quot;highlighter-rouge&quot;&gt;Int -&amp;gt; (Int -&amp;gt; Int)&lt;/code&gt; , one evaluate plus 2 as a function with type &lt;code class=&quot;highlighter-rouge&quot;&gt;Int -&amp;gt; Int&lt;/code&gt;  that adds 2 to input integer x.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;[Bool] -&amp;gt; (Bool -&amp;gt; Int) -&amp;gt; [Int]&lt;/code&gt; stands for taking a function that has the type &lt;code class=&quot;highlighter-rouge&quot;&gt;Bool -&amp;gt; Int&lt;/code&gt; as input. This is also possible in type declaration.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;int-and-x&quot;&gt;[Int] and (x)&lt;/h3&gt;

&lt;p&gt;on the left side of &lt;code class=&quot;highlighter-rouge&quot;&gt;=&lt;/code&gt; inside function declaration:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;(x)&lt;/code&gt; could represent &lt;code class=&quot;highlighter-rouge&quot;&gt;[]&lt;/code&gt;, i.e. null.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;(x:xs)&lt;/code&gt; could take the first element of &lt;code class=&quot;highlighter-rouge&quot;&gt;[Int]&lt;/code&gt;  as x, but &lt;code class=&quot;highlighter-rouge&quot;&gt;[Int]&lt;/code&gt; can’t be null.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;on the right side of &lt;code class=&quot;highlighter-rouge&quot;&gt;=&lt;/code&gt; inside function declaration:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;x:function (xs)&lt;/code&gt; already stands for a &lt;code class=&quot;highlighter-rouge&quot;&gt;[Int]&lt;/code&gt;, adding &lt;code class=&quot;highlighter-rouge&quot;&gt;()&lt;/code&gt; outside is not allowed, but &lt;code class=&quot;highlighter-rouge&quot;&gt;(xs)&lt;/code&gt; must be in &lt;code class=&quot;highlighter-rouge&quot;&gt;()&lt;/code&gt; to represent &lt;code class=&quot;highlighter-rouge&quot;&gt;[Int]&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;design-idea&quot;&gt;Design idea&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Before coding one must come up with a specfic functions nesting pipeline. Then implement from innermost function to outermost. Every function can be tested seperately, once tested successful seperately, there won’t be any bugs while combination. This is one of the advantages of functional programming.&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Fri, 12 Apr 2019 14:00:00 +0200</pubDate>
        <link>http://localhost:4000/2019/04/12/Haskell/</link>
        <guid isPermaLink="true">http://localhost:4000/2019/04/12/Haskell/</guid>
        
        <category>学习</category>
        
        <category>Haskell</category>
        
        
      </item>
    
      <item>
        <title>C++ study note</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;“stay hungry, stay foolish”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;main-idea&quot;&gt;Main idea:&lt;/h1&gt;

&lt;p&gt;brute force&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;regex_search&lt;/code&gt; extract all occurred variables&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;set&lt;/code&gt; delete repeat variables&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;bitset&lt;/code&gt; assign bit values in canonical order to all variables&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;map&lt;/code&gt; to store corresponding values&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;regex_search&lt;/code&gt; find and replace every  internal tuple “|xy” by “0” or “1”, loop until s == “1” or “0”&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;regex_match&lt;/code&gt; handle invalid input&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;notes&quot;&gt;Notes:&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;In &lt;code class=&quot;highlighter-rouge&quot;&gt;regex &lt;/code&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;\\w&lt;/code&gt; represents one letter rather than &lt;code class=&quot;highlighter-rouge&quot;&gt;\w&lt;/code&gt;. Remmber double slash, same to other special symbols.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;regex_match&lt;/code&gt; matches whole string with regular expression, but &lt;code class=&quot;highlighter-rouge&quot;&gt;regex_search&lt;/code&gt; only returns first matched string, if we need to find all, it’s not simple like &lt;code class=&quot;highlighter-rouge&quot;&gt;re.findall&lt;/code&gt; in &lt;code class=&quot;highlighter-rouge&quot;&gt;python&lt;/code&gt;, rather &lt;code class=&quot;highlighter-rouge&quot;&gt;while&lt;/code&gt; with arguments &lt;code class=&quot;highlighter-rouge&quot;&gt;start&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;end&lt;/code&gt; iterator loops.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Iterator plays an important role in &lt;code class=&quot;highlighter-rouge&quot;&gt;C++&lt;/code&gt; . Not like &lt;code class=&quot;highlighter-rouge&quot;&gt;python&lt;/code&gt;, we could &lt;code class=&quot;highlighter-rouge&quot;&gt;for … in&lt;/code&gt; to go through in different data structures like &lt;code class=&quot;highlighter-rouge&quot;&gt;set&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;map&lt;/code&gt; and so on. In &lt;code class=&quot;highlighter-rouge&quot;&gt;C++&lt;/code&gt; the only way to go through a set is &lt;code class=&quot;highlighter-rouge&quot;&gt;std::map&amp;lt;char, int&amp;gt;iterator iter&lt;/code&gt; then loop it from &lt;code class=&quot;highlighter-rouge&quot;&gt;map.begin()&lt;/code&gt; to &lt;code class=&quot;highlighter-rouge&quot;&gt;map.end()&lt;/code&gt;. &lt;code class=&quot;highlighter-rouge&quot;&gt;iter-&amp;gt;first&lt;/code&gt; refers to key, &lt;code class=&quot;highlighter-rouge&quot;&gt;iter-&amp;gt;second&lt;/code&gt; refers to value. Each iterator refers to one bit of original map or string, so that we could execute some bit operations on them.&lt;/p&gt;

    &lt;p&gt;link: &lt;a href=&quot;https://github.com/desAweis/programming-challenge/tree/master/SAT-solver&quot;&gt;SAT-solver&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Wed, 10 Apr 2019 14:00:00 +0200</pubDate>
        <link>http://localhost:4000/2019/04/10/SAT-solver/</link>
        <guid isPermaLink="true">http://localhost:4000/2019/04/10/SAT-solver/</guid>
        
        <category>编程</category>
        
        <category>C++</category>
        
        
      </item>
    
      <item>
        <title>Record Something</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;“Spring is coming. ”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;http://other.web.nf01.sycdn.kuwo.cn/resource/n3/65/45/3896840009.mp3&lt;/p&gt;

&lt;p id=&quot;build&quot;&gt;&lt;/p&gt;

&lt;p&gt;春天来了，天气终于好了起来，每天都是艳阳天，心情也跟着好了起来。&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;学习&quot;&gt;学习&lt;/h1&gt;

&lt;p&gt;今天上午又去了趟ZPA，终于把MaLo成绩登上来了。上上学期考的第二次考试，但是忘记注册了，考场现填的表，助教把成绩发到ZPA了一直没有录到系统里，真心吐槽德国的效率低下，但是工作时间短，任务多，条件又宽松，私心以为像我这样忘记an考试了，但还是让我考了，真的很宽容，工作效率低一点完全可以理解。无论如何，登上了成绩，标志着所有补课全部通过，可以注册毕设了，进入master最后一个阶段。负责我们专业的&lt;code class=&quot;highlighter-rouge&quot;&gt;Daniel Babarello&lt;/code&gt;人超nice啊，耐心认真，赞一个👍&lt;/p&gt;

&lt;p&gt;上学期的两门课还没出成绩，考第二次就是很坑啊，改卷时间碰上开学，各种事情堆在一起，没时间改卷了，上周三发的找毕设邮件到今天已经第六天了，还在等消息。在德国待时间久了，就得习惯这边的风格，一般等待时间是以周期为单位的。&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;新鲜事&quot;&gt;新鲜事&lt;/h1&gt;

&lt;p&gt;上周六和徒步群里的小伙伴去&lt;code class=&quot;highlighter-rouge&quot;&gt;Eyneburg&lt;/code&gt;采野韭菜，德国这边的”韭菜“不像国内的韭菜，德语翻译过来是”熊葱“，大部分植株只有一片叶子，纺锤型，叶子上没有纹路，凑到跟前可以闻到淡淡的类似国内韭菜特有的香味。回家马上就吃掉了，韭菜炒鸡蛋，韭菜很嫩，吃起来很爽口，不过韭菜味很淡，喜欢吃韭菜的同学需要多加点量。阳光无限好，空气清新，走在林间很惬意，一直都格外喜欢亲近大自然的活动，远离喧嚣（虽然德国已经无趣到快要发霉了），踩在草地上，感受一草一木，呼吸最干净的空气，这才是生命本来的样子啊！&lt;/p&gt;

&lt;p&gt;昨天晚上去上&lt;code class=&quot;highlighter-rouge&quot;&gt;Zumba&lt;/code&gt;课，比上次多了很多新面孔，其中有两个中国妹子。老师&lt;code class=&quot;highlighter-rouge&quot;&gt;Adrian Copello Guilarte&lt;/code&gt;是黑人，来自古巴，不得不说上帝是公平的，这个种族经历了远多于其他种族的灾难，有些伤痛甚至现在也无法痊愈，非洲仍然活在水深火热之中，但是，黑人的身体素质和音乐舞蹈天赋真的特棒。老师的肌肉线条很完美，舞蹈动作干净利落有力度，四肢协调，有美感。说到&lt;code class=&quot;highlighter-rouge&quot;&gt;Zumba&lt;/code&gt;舞蹈，每个小节上来先练步法，然后加上上身动作。其中步法在我看来可以说是非常诡异了，一般是四拍，但是每个小节的动作全然不同，比如说，左左右右-&amp;gt;左右左右，类似这样无规律循环，我总是迈错步子，因为不知道下一步迈向何处，经常是左脚刚向左出，发现错了，又改向右出，特别不协调哈哈。跳得不好，但是活动筋骨，放松心情还是相当不错的。整个50分钟下来，浑身是汗，很舒服，整个身体很柔软，站姿也更优雅了。班上的小姐姐很多，算我只有两个男生，身材都挺好的，可能大家都是新手，感觉跳得都没有美感，我理解的&lt;code class=&quot;highlighter-rouge&quot;&gt;Zumba&lt;/code&gt;应该是动作有力度，收放自如，这样看起来才会热情洋溢，充满活力，老师是跳得zhui好的，真羡慕那样的身材。我健身还有两个月就满两年了，肌肉线条初见形状，但是离老师那样健美的身材还是差太多了…特别是腹肌。&lt;/p&gt;

&lt;p&gt;——2019.04.09 Tue&lt;/p&gt;

</description>
        <pubDate>Tue, 09 Apr 2019 14:00:00 +0200</pubDate>
        <link>http://localhost:4000/2019/04/09/RecordSth/</link>
        <guid isPermaLink="true">http://localhost:4000/2019/04/09/RecordSth/</guid>
        
        <category>学习</category>
        
        <category>新鲜事</category>
        
        
      </item>
    
      <item>
        <title>Hello</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;“Yeah It’s on. ”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p id=&quot;build&quot;&gt;&lt;/p&gt;

&lt;p&gt;Hi,&lt;/p&gt;

&lt;p&gt;it’s Wei here.&lt;/p&gt;

&lt;p&gt;My first Blog.&lt;/p&gt;

</description>
        <pubDate>Thu, 04 Apr 2019 14:00:00 +0200</pubDate>
        <link>http://localhost:4000/2019/04/04/hello/</link>
        <guid isPermaLink="true">http://localhost:4000/2019/04/04/hello/</guid>
        
        <category>生活</category>
        
        <category>Meta</category>
        
        
      </item>
    
  </channel>
</rss>
